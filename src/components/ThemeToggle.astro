---
// Theme toggle component with 3 states: light, dark, system
---

<div class="flex items-center space-x-2">
  <button
    id="theme-toggle"
    type="button"
    class="p-2 rounded-lg bg-gray-100 dark:bg-slate-800 hover:bg-gray-200 dark:hover:bg-slate-700 transition-colors border border-transparent dark:border-slate-700"
    aria-label="Toggle theme"
  >
    <svg id="theme-icon-light" class="w-5 h-5 text-gray-800 dark:text-gray-200 hidden" fill="currentColor" viewBox="0 0 20 20">
      <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"/>
    </svg>
    <svg id="theme-icon-dark" class="w-5 h-5 text-gray-800 dark:text-gray-200 hidden" fill="currentColor" viewBox="0 0 20 20">
      <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"/>
    </svg>
    <svg id="theme-icon-system" class="w-5 h-5 text-gray-800 dark:text-gray-200 hidden" fill="currentColor" viewBox="0 0 20 20">
      <path fill-rule="evenodd" d="M3 5a2 2 0 012-2h10a2 2 0 012 2v8a2 2 0 01-2 2h-2.22l.123.489.804.804A1 1 0 0113 18H7a1 1 0 01-.707-1.707l.804-.804L7.22 15H5a2 2 0 01-2-2V5zm5.771 7H5V5h10v7H8.771z" clip-rule="evenodd"/>
    </svg>
  </button>
</div>

<script is:inline>
  (function() {
    // Get stored theme or default to 'system'
    function getStoredTheme() {
      if (typeof localStorage !== 'undefined') {
        const stored = localStorage.getItem('theme');
        if (stored === 'light' || stored === 'dark' || stored === 'system') {
          return stored;
        }
      }
      return 'system';
    }

    // Get the effective theme (resolving 'system' to actual preference)
    function getEffectiveTheme(theme) {
      if (theme === 'system') {
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      }
      return theme;
    }

    // Apply theme to document
    function applyTheme(theme) {
      const effectiveTheme = getEffectiveTheme(theme);

      // Apply dark mode class
      const html = document.documentElement;
      if (effectiveTheme === 'dark') {
        html.classList.add('dark');
      } else {
        html.classList.remove('dark');
      }

      // Update icons
      const lightIcon = document.getElementById('theme-icon-light');
      const darkIcon = document.getElementById('theme-icon-dark');
      const systemIcon = document.getElementById('theme-icon-system');

      if (lightIcon && darkIcon && systemIcon) {
        lightIcon.classList.add('hidden');
        darkIcon.classList.add('hidden');
        systemIcon.classList.add('hidden');

        if (theme === 'light') {
          lightIcon.classList.remove('hidden');
        } else if (theme === 'dark') {
          darkIcon.classList.remove('hidden');
        } else {
          systemIcon.classList.remove('hidden');
        }
      }
    }

    // Cycle through themes: light → dark → system → light
    function cycleTheme() {
      const currentTheme = getStoredTheme();
      let nextTheme;

      if (currentTheme === 'light') {
        nextTheme = 'dark';
      } else if (currentTheme === 'dark') {
        nextTheme = 'system';
      } else {
        nextTheme = 'light';
      }

      localStorage.setItem('theme', nextTheme);
      applyTheme(nextTheme);
    }

    // Wait for DOM to be ready
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initTheme);
    } else {
      initTheme();
    }

    function initTheme() {
      // Initialize theme on load
      const initialTheme = getStoredTheme();
      applyTheme(initialTheme);

      // Add click handler
      const themeToggle = document.getElementById('theme-toggle');
      if (themeToggle) {
        themeToggle.addEventListener('click', cycleTheme);
      }

      // Listen for system theme changes when in 'system' mode
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function() {
        const currentTheme = getStoredTheme();
        if (currentTheme === 'system') {
          applyTheme('system');
        }
      });
    }
  })();
</script>
