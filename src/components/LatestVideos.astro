---
import VideoCard from './VideoCard.astro';
import WaveTransition from './WaveTransition.astro';
import { getCollection } from 'astro:content';

// Get all videos from YouTube loader
const allVideos = await getCollection('videos');

// Sort by published date (newest first) and take the latest 6
const videos = allVideos
  .sort((a, b) => {
    const dateA = new Date(a.data.publishedAt);
    const dateB = new Date(b.data.publishedAt);
    return dateB.getTime() - dateA.getTime();
  })
  .slice(1, 7);

const hasVideos = videos.length > 0;

// Helper function to format duration from ISO 8601
const formatDuration = (duration: string) => {
  const match = duration.match(/PT(?:(\d+)H)?(?:(\d+)M)?(?:(\d+)S)?/);
  if (!match) return '';

  const hours = parseInt(match[1] || '0');
  const minutes = parseInt(match[2] || '0');
  const seconds = parseInt(match[3] || '0');

  if (hours > 0) {
    return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
  }
  return `${minutes}:${seconds.toString().padStart(2, '0')}`;
};
---

<WaveTransition
  topColor="fill-white dark:fill-slate-800"
  bottomColor="fill-gray-50 dark:fill-slate-700"
/>

<section id="videos" class="py-16 bg-gray-50 dark:bg-slate-700 transition-colors">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-12">
      <h2 class="text-3xl lg:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4">
        More Videos
      </h2>
      <p class="text-lg text-gray-600 dark:text-gray-300">
        Explore more content on AI orchestration and development workflows
      </p>
    </div>

    {hasVideos ? (
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {videos.map((video) => (
          <VideoCard
            videoId={video.id}
            title={video.data.title}
            thumbnail={video.data.thumbnails?.maxres?.url || video.data.thumbnails?.standard?.url || video.data.thumbnails?.high?.url || video.data.thumbnails?.medium?.url || ''}
            duration={video.data.duration ? formatDuration(video.data.duration) : undefined}
            viewCount={video.data.viewCount ? parseInt(video.data.viewCount) : undefined}
            publishedAt={video.data.publishedAt}
          />
        ))}
      </div>
    ) : (
      <div class="text-center py-12">
        <p class="text-gray-600">Loading videos...</p>
      </div>
    )}

    <div class="text-center mt-12">
      <a
        href="https://youtube.com/@buildatscale"
        target="_blank"
        rel="noopener noreferrer"
        class="inline-flex items-center space-x-2 bg-gray-100 hover:bg-gray-200 text-gray-900 px-6 py-3 rounded-lg font-medium transition-colors"
      >
        <span>View All Videos</span>
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
        </svg>
      </a>
    </div>
  </div>
</section>
